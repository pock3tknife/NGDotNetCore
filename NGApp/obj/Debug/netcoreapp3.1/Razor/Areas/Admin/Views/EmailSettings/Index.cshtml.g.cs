#pragma checksum "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "79c2887f4b0442d65944aec180cf6ac9e59cddc1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AngularMythics.Areas.Admin.Views.EmailSettings.Areas_Admin_Views_EmailSettings_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/EmailSettings/Index.cshtml")]
namespace AngularMythics.Areas.Admin.Views.EmailSettings
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"79c2887f4b0442d65944aec180cf6ac9e59cddc1", @"/Areas/Admin/Views/EmailSettings/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"131fb08f030778809319f3f66b5dbe307b547b03", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    public class Areas_Admin_Views_EmailSettings_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ModelService.AdminBaseViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("sitewideSettingsForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("smtpSettingsForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/limonte-sweetalert2/sweetalert2.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
  
    ViewData["Title"] = "Email Settings";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""container-fluid"">
    <section class=""sec-wrapper"">
        <fieldset class=""border p-4"">
            <legend class=""w-auto"">Email Settings</legend>
            <div class=""row"">
                <div class=""col"">
                    <div class=""alert alert-danger"" role=""alert"">
                        <i class=""fas fa-bell mr-1""></i>
                        <span>New changes would not take effect untill server is re-started.</span>
                    </div>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-md-12"">
                    <div class=""card"">
                        <h6 class=""card-header d-flex align-items-center"">
                            <i class=""fas fa-envelope-open-text mr-2""></i>SendGrid Settings
                        </h6>
                        <div class=""card-body"">
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "79c2887f4b0442d65944aec180cf6ac9e59cddc15444", async() => {
                WriteLiteral("\n                                ");
#nullable restore
#line 26 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
                           Write(Html.AntiForgeryToken());

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                <div class=""row"">
                                    <div class=""col-md-4 form-group"">
                                        <label for=""sendgridUsername"">SendGrid Username</label>
                                        <input class=""form-control"" id=""sendgridUsername"" placeholder=""eg: techhowdy""");
                BeginWriteAttribute("value", " value=\"", 1409, "\"", 1451, 1);
#nullable restore
#line 30 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
WriteAttributeValue("", 1417, Model.SendGridOption.SendGridUser, 1417, 34, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" type=""text"">
                                    </div>
                                    <div class=""col-md-8 form-group"">
                                        <label for=""sendgridKey"">SendGrid API Key</label>
                                        <input class=""form-control"" id=""sendgridKey""");
                BeginWriteAttribute("value", " value=\"", 1753, "\"", 1794, 1);
#nullable restore
#line 34 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
WriteAttributeValue("", 1761, Model.SendGridOption.SendGridKey, 1761, 33, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" placeholder=""eg: Enter your SendGrid API Key"" type=""text"">
                                    </div>
                                </div>
                                <div class=""row"">
                                    <div class=""col-md-3 form-group"">
                                        <label for=""sendgridFromName"">From Name</label>
                                        <input class=""form-control"" id=""sendgridFromName"" placeholder=""eg: techhowdy""");
                BeginWriteAttribute("value", " value=\"", 2262, "\"", 2304, 1);
#nullable restore
#line 40 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
WriteAttributeValue("", 2270, Model.SendGridOption.FromFullName, 2270, 34, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" type=""text"">
                                    </div>
                                    <div class=""col-md-6  form-group"">
                                        <label for=""sendgridFromEmail"">From Email</label>
                                        <input class=""form-control"" id=""sendgridFromEmail"" placeholder=""eg: john@techhowdy.com""");
                BeginWriteAttribute("value", " value=\"", 2650, "\"", 2689, 1);
#nullable restore
#line 44 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
WriteAttributeValue("", 2658, Model.SendGridOption.FromEmail, 2658, 31, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" type=""email"">
                                    </div>
                                    <div class=""col-md-3"">
                                        <label for=""sendGridIsDefault"">Is Default Provider</label>
                                        <div class=""input-group"">
                                            <div class=""input-group-prepend m-0"">
                                                <div class=""input-group-text"">
                                                    <input type=""checkbox"" id=""sendGridIsDefault"" aria-label=""Is Default"" placeholder=""Is Default"" ");
#nullable restore
#line 51 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
                                                                                                                                               Write(Model.SendGridOption.IsDefault == true ? "checked" : "");

#line default
#line hidden
#nullable disable
                WriteLiteral(@">
                                                </div>
                                            </div>
                                            <input type=""text"" placeholder=""Default Email Provider"" disabled class=""form-control"" aria-label=""Default Email Provider"">
                                        </div>
                                    </div>
                                </div>
                                <div class=""row text-right"">
                                    <div class=""col"">
                                        <button class=""btn btn-primary btn-md mt-3 d-none d-md-inline-block d-sm-none"" id=""btnMdUpdateSengridOptions"">
                                            <span class=""btn-text""><i class=""fas fa-pen mr-2""></i>UPDATE</span>
                                        </button>
                                        <!-- Only visible on small Screen -->
                                        <button class=""btn btn-primary btn-md mt-3 btn-block d-block d-md-none"" id");
                WriteLiteral(@"=""btnSmUpdateSengridOptions"">
                                            <span class=""btn-text""><i class=""fas fa-pen mr-2""></i>UPDATE</span>
                                        </button>
                                    </div>
                                </div>
                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </div>
                    </div>
                </div>
            </div>
            <div class=""row mt-3"">
                <div class=""col-md-12"">
                    <div class=""card"">
                        <h6 class=""card-header d-flex align-items-center"">
                            <i class=""fas fa-envelope-open-text mr-2""></i>SMTP Settings
                        </h6>
                        <div class=""card-body"">
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "79c2887f4b0442d65944aec180cf6ac9e59cddc113102", async() => {
                WriteLiteral(@"
                                <div class=""row"">
                                    <div class=""col-md-3 form-group"">
                                        <label for=""smtpUsername"">SMTP Username</label>
                                        <input class=""form-control"" id=""smtpUsername"" placeholder=""eg: techhowdy""");
                BeginWriteAttribute("value", " value=\"", 5505, "\"", 5543, 1);
#nullable restore
#line 85 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
WriteAttributeValue("", 5513, Model.SmtpOption.SmtpUserName, 5513, 30, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" type=""text"">
                                    </div>
                                    <div class=""col-md-3 form-group"">
                                        <label for=""smtpPassword"">SMTP Password</label>
                                        <input class=""form-control"" id=""smtpPassword"" placeholder=""*******""");
                BeginWriteAttribute("value", " value=\"", 5866, "\"", 5904, 1);
#nullable restore
#line 89 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
WriteAttributeValue("", 5874, Model.SmtpOption.SmtpPassword, 5874, 30, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" type=""password"">
                                    </div>
                                    <div class=""col-md-2 form-group"">
                                        <label for=""smtpHost"">SMTP HOST</label>
                                        <input class=""form-control"" id=""smtpHost"" placeholder=""eg: smtp.gmail.com""");
                BeginWriteAttribute("value", " value=\"", 6230, "\"", 6264, 1);
#nullable restore
#line 93 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
WriteAttributeValue("", 6238, Model.SmtpOption.SmtpHost, 6238, 26, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" type=""text"">
                                    </div>
                                    <div class=""col-md-2 form-group"">
                                        <label for=""smtpPort"">SMTP PORT</label>
                                        <input class=""form-control"" id=""smtpPort"" placeholder=""eg: 587"" type=""text""");
                BeginWriteAttribute("value", " value=\"", 6587, "\"", 6621, 1);
#nullable restore
#line 97 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
WriteAttributeValue("", 6595, Model.SmtpOption.SmtpPort, 6595, 26, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@">
                                    </div>
                                    <div class=""col-md-2 form-group"">
                                        <label for=""smtpSsl"">Use SSL</label>
                                        <div class=""input-group"">
                                            <div class=""input-group-prepend m-0"">
                                                <div class=""input-group-text"">
                                                    <input type=""checkbox"" id=""smtpSsl"" aria-label=""Use SSL"" placeholder=""Use SSL"" ");
#nullable restore
#line 104 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
                                                                                                                               Write(Model.SmtpOption.SmtpSsl == true ? "checked" : "");

#line default
#line hidden
#nullable disable
                WriteLiteral(@">
                                                </div>
                                            </div>
                                            <input type=""text"" placeholder=""Use SSL"" disabled class=""form-control"" aria-label=""Use SSL"">
                                        </div>
                                    </div>
                                </div>
                                <div class=""row"">
                                    <div class=""col-md-3 form-group"">
                                        <label for=""smtpFromName"">From Name</label>
                                        <input class=""form-control"" id=""smtpFromName"" placeholder=""eg: techhowdy""");
                BeginWriteAttribute("value", " value=\"", 7915, "\"", 7953, 1);
#nullable restore
#line 114 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
WriteAttributeValue("", 7923, Model.SmtpOption.FromFullName, 7923, 30, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" type=""text"">
                                    </div>
                                    <div class=""col-md-6  form-group"">
                                        <label for=""smtpFromEmail"">From Email</label>
                                        <input class=""form-control"" id=""smtpFromEmail"" placeholder=""eg: john@techhowdy.com""");
                BeginWriteAttribute("value", " value=\"", 8291, "\"", 8326, 1);
#nullable restore
#line 118 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
WriteAttributeValue("", 8299, Model.SmtpOption.FromEmail, 8299, 27, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" type=""email"">
                                    </div>
                                    <div class=""col-md-3"">
                                        <label for=""smtpIsDefault"">Is Default Provider</label>
                                        <div class=""input-group"">
                                            <div class=""input-group-prepend m-0"">
                                                <div class=""input-group-text"">
                                                    <input type=""checkbox"" id=""smtpIsDefault"" aria-label=""Is Default"" placeholder=""Is Default"" ");
#nullable restore
#line 125 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
                                                                                                                                           Write(Model.SmtpOption.IsDefault == true ? "checked" : "");

#line default
#line hidden
#nullable disable
                WriteLiteral(@">
                                                </div>
                                            </div>
                                            <input type=""text"" placeholder=""Default Email Provider"" disabled class=""form-control"" aria-label=""Default Email Provider"">
                                        </div>
                                    </div>
                                </div>
                                <div class=""row text-right"">
                                    <div class=""col"">
                                        <button class=""btn btn-primary btn-md mt-3 d-none d-md-inline-block d-sm-none"" id=""btnMdUpdateSmtpOptions"">
                                            <span class=""btn-text""><i class=""fas fa-pen mr-2""></i>UPDATE</span>
                                        </button>
                                        <!-- Only visible on small Screen -->
                                        <button class=""btn btn-primary btn-md mt-3 btn-block d-block  d-md-none"" id=""");
                WriteLiteral(@"btnSmUpdateSmtpOptions"">
                                            <span class=""btn-text""><i class=""fas fa-pen mr-2""></i>UPDATE</span>
                                        </button>
                                    </div>
                                </div>
                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
    </section>
</div>

<div class=""modal"" id=""updateSuccessModal"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <!-- Modal Header -->
            <div class=""modal-header"">
                <h4 class=""modal-title"">Modal Heading</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>

            <!-- Modal body -->
            <div class=""modal-body"">
                Reload page to see changes.
            </div>

            <!-- Modal footer -->
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"" id=""reloadPageBtn"">Reload</button>
            </div>

        </div>
    </div>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral("\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "79c2887f4b0442d65944aec180cf6ac9e59cddc123604", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>

        $(function() {
           $('#btnMdUpdateSengridOptions').click(function(e) {
               e.preventDefault();
               UpdateSengridOptions();
           });

           $('#btnSmUpdateSengridOptions').click(function(e) {
                    e.preventDefault();
                   UpdateSengridOptions();
           });

           $('#btnMdUpdateSmtpOptions').click(function(e) {
                          e.preventDefault();
                          UpdateSmtpOptions();
           });

           $('#btnSmUpdateSmtpOptions').click(function(e) {
                               e.preventDefault();
                              UpdateSmtpOptions();
           });

           $('#reloadPageBtn').click(function(e) {
                e.preventDefault();
                window.location.reload();
           });
        });


        function UpdateSmtpOptions() {

          let smtpUser = $(""#smtpUsername"").val();
          let smtpPassword = $(""#smtpPassword"").val();
          let smtpFr");
                WriteLiteral(@"omFullName = $(""#smtpFromName"").val();
          let smtpFromEmail = $(""#smtpFromEmail"").val();
          let smtpHost = $(""#smtpHost"").val();
          let smtpPort = Number($(""#smtpPort"").val());
          let smtpSsl =  $(""#smtpSsl"").is("":checked"");
          let smtpIsDefault = $(""#smtpIsDefault"").is("":checked"");
          const smtpOptions =
          {
              ""SmtpUserName"" : smtpUser,
              ""SmtpPassword"" : smtpPassword,
              ""FromFullName"" : smtpFromFullName,
              ""FromEmail"" : smtpFromEmail,
              ""SmtpHost"" : smtpHost,
              ""SmtpPort"" : smtpPort,
              ""SmtpSsl"" : smtpSsl,
              ""IsDefault"" : smtpIsDefault
          };
          console.log(smtpOptions);
          $.ajax({
              type: 'POST',
              url: """);
#nullable restore
#line 231 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
               Write(Url.Action("UpdateSmtpOptions", "EmailSettings"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
              contentType: ""application/json; charset=utf-8"",
              dataType: ""json"",
              data: JSON.stringify(smtpOptions),
              headers: {
                  'X-XSRF-TOKEN': getCookie(""XSRF-TOKEN""),
              },
              success: function (result) {
                  console.log(result);
                  if (result)
                  {
                      console.log(""Success"");
                      $("".container-fluid"").css({ opacity: 0.5 });
                      $(""#updateSuccessModal .modal-title"").text(""SMTP Email Settings Updated"")
                      $(""#updateSuccessModal"").show();
                  }
              },
              error: function() {
                alert(""Error : Request could not be processed. Try again Later"");
              }
          });
        }

        function UpdateSengridOptions() {
            let sendgridUser = $(""#sendgridUsername"").val();
            let sendgridKey = $(""#sendgridKey"").val();
            let sendgridFromF");
                WriteLiteral(@"ullName = $(""#sendgridFromName"").val();
            let sendgridromEmail = $(""#sendgridFromEmail"").val();
            let sendgridIsDefault = $(""#sendGridIsDefault"").is("":checked"");
            const sendGridOptions = {""SendGridUser"" : sendgridUser, ""SendGridKey"" : sendgridKey, ""FromFullName"" : sendgridFromFullName, ""FromEmail"" : sendgridromEmail, ""IsDefault"" : sendgridIsDefault };
            console.log(sendGridOptions);
            $.ajax({
                type: 'POST',
                url: """);
#nullable restore
#line 264 "C:\Angular repo\angular-repo-1\AngularMythics\Areas\Admin\Views\EmailSettings\Index.cshtml"
                 Write(Url.Action("UpdateSengridOptions", "EmailSettings"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""",
                contentType: ""application/json; charset=utf-8"",
                dataType: ""json"",
                data: JSON.stringify(sendGridOptions),
                headers: {
                    'X-XSRF-TOKEN': getCookie(""XSRF-TOKEN""),
                },
                success: function (result) {
                    console.log(result);
                    if (result)
                    {
                        console.log(""Success"");
                        $("".container-fluid"").css({ opacity: 0.5 });
                        $(""#updateSuccessModal .modal-title"").text(""SendGrid Email Settings Updated"")
                        $(""#updateSuccessModal"").show();
                    }
                },
                error: function() {
                  alert(""Error : Request could not be processed. Try again Later"");
                }
            });
        }       
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ModelService.AdminBaseViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
